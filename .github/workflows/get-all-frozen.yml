########################################################################################################################################
# This will attempt to retrieve and generate stubs from all known versions of MicroPython
########################################################################################################################################
# Check out repos in this structure 
# micropython-stubs
#   + - stubs 
#     +-- micropython
#      -- micropython-lib
# repro structure needed to allow automatic PR creation to work
########################################################################################################################################
name: get-all-frozen

on:
  workflow_dispatch:
  schedule: 
    - cron: "0 1 * * *"   # Run everyday at 01:00

jobs:
  ########################################################################################################################################
  get-micropython-frozen:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        version: ['v1.9.3','v1.9.4','v1.10','v1.11','v1.12','v1.13','v1.14','v1.15','v1.16','v1.17','v1.18','v1.19','v2.0','Latest']

    # Most scripts will be run from the stubber, set that as default
    defaults:
      run:
        shell: bash
        # working-directory: ${{github.workspace}}/micropython-stubber
  
    steps:

      - name: Checkout stubs repo
        uses: actions/checkout@v2

      # make Python work
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          cache: 'pip'

      - name: Install Python dependencies (stubber)
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: get repos
        run: stubber clone

      # checkout micropython at the correct version tag
      - name: checkout micropython ${{ matrix.version }}
        if: matrix.version!='Latest'
        working-directory: ${{github.workspace}}/micropython
        run: |
          git checkout ${{ matrix.version }}
      # for the latest version, checkout micropython/master
      - name: checkout micropython v${{ matrix.version }}
        if: matrix.version=='Latest'
        working-directory: ${{github.workspace}}/micropython
        run: |
          git checkout micropython/master

      - name: get commit info
        id: mpycommit
        working-directory: ${{github.workspace}}/micropython
        run: |
          echo "::set-output name=info::'$(git log --oneline -1)'"


      ######################################
      # This is where the actual work starts
      ######################################

      - name: Get frozen modules for ${{ matrix.version }}
        working-directory: ${{github.workspace}}
        run: |
          stubber  get-frozen --stub-folder ${{github.workspace}}/stubs --black

      ######################################
      # now check if a PR is needed 
      ######################################
      - name: check for changes other than modules.py
        shell: pwsh
        id: changed
        run: |
          $changed = (git whatchanged -1 --format=oneline | ?{-not $_.Contains("modules.json") }).count-1
          write-host "::set-output name=count::$changed"

      - name: Create Pull Request ( if relevant changes) 
        if: ${{ steps.changed.outputs.count }} >= 1
        uses: peter-evans/create-pull-request@v3
        id: cpr
        # ref: https://github.com/peter-evans/create-pull-request
        with:
          token: ${{ secrets.CREATE_PR_ACTION_TOKEN }} # ${{ secrets.PAT }}
          title: "Add/update MicroPython ${{ matrix.version }} frozen stubs"
          commit-message: add/update MicroPython ${{ matrix.version }} frozen stubs
          body : |
            add/update MicroPython ${{ matrix.version }} frozen stubs
            based on micropython commit ${{ steps.mpycommit.outputs.info }}          
          branch: "micropython-${{ matrix.version }}-stubs"
          reviewers: josverl
          labels: |
            frozen stubs 
            MicroPython
            ${{ matrix.version }}
          delete-branch: true

      - name: Enable Pull Request Automerge
        if: steps.cpr.outputs.pull-request-operation == 'created'
        uses: peter-evans/enable-pull-request-automerge@v1
        with:
          token: ${{ secrets.CREATE_PR_ACTION_TOKEN }} # ${{ secrets.PAT }}
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          merge-method: squash

  ########################################################################################################################################
  get-core-cpython-stubs:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Most scripts will be run from the stubber, set that as default
    defaults:
      run:
        shell: bash
  #      working-directory: ${{github.workspace}}/micropython-stubber
  
    steps:

      - name: Checkout stubs repo
        uses: actions/checkout@v2

      # make Python work
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          cache: 'pip'

      - name: Install Python dependencies (stubber)
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi


      - name: get commit info
        id: mpycommit
        working-directory: ${{github.workspace}}/micropython
        run: |
          echo "::set-output name=info::'$(git log --oneline -1)'"


      ######################################
      # This is where the actual work starts
      ######################################

      - name: Get frozen modules for ${{ matrix.version }}
        working-directory: ${{github.workspace}}
        run: |
          stubber get-core --stub-folder ${{github.workspace}}/stubs --black


      ######################################
      # now check if a PR is needed 
      ######################################
      - name: check for changes other than modules.py
        shell: pwsh
        id: changed
        run: |
          $changed = (git whatchanged -1 --format=oneline | ?{-not $_.Contains("modules.json") }).count-1
          write-host "::set-output name=count::$changed"

      - name: Create Pull Request ( if relevant changes) 
        if: ${{ steps.changed.outputs.count }} >= 1
        uses: peter-evans/create-pull-request@v3
        id: cprcore
        # ref: https://github.com/peter-evans/create-pull-request
        with:
          token: ${{ secrets.CREATE_PR_ACTION_TOKEN }} # ${{ secrets.PAT }}
          title: "add/update MicroPython core stubs"
          commit-message: add/update MicroPython core stubs
          branch: "micropython-core-stubs"
          reviewers: josverl
          labels: |
            CPython
            MicroPython
          delete-branch: true

      - name: Enable Pull Request Automerge
        if: steps.cprcore.outputs.pull-request-operation == 'created'
        uses: peter-evans/enable-pull-request-automerge@v1
        with:
          token: ${{ secrets.CREATE_PR_ACTION_TOKEN }} # ${{ secrets.PAT }}
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          merge-method: squash
