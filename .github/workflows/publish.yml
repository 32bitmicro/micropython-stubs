# workflow to build packages for PyPI
########################################################################################################################################
# This will attempt to retrieve and generate stubs from MicroPython documentation
########################################################################################################################################
# Check out repos in this structure
# micropython-stubs
# +-- stubs
# +-- repos
#     +-- micropython
#      -- micropython-lib
# repro structure needed to allow automatic PR creation to work
########################################################################################################################################
name: publish-stubs

on:
  workflow_dispatch:
  schedule:
    - cron: "0 1 * * 5" # Run every Friday at 01:00
env:
  PIP_DISABLE_PIP_VERSION_CHECK: 1

jobs:
  ########################################################################################################################################
  get-versions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # no need to install python
      - run: pip install pygithub packaging
      - run: python .github/workflows/list_versions.py
        id: dynamic
    outputs:
      job_versions: ${{ steps.dynamic.outputs.versions }}

  ########################################################################################################################################
  build-publish-stubs:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # continue-on-error: true
    needs: get-versions
    strategy:
      matrix: ${{ fromJSON(needs.get-versions.outputs.job_versions) }}
      # matrix:
      #   version: ["v1.18"]
    steps:
      - name: Checkout stubs repo
        uses: actions/checkout@v3
      - run: |
          pip install wheel
          pip install micropython-stubber
      - run: |
          echo ${{matrix.version}}
          stubber --version
          stubber clone --no-stubs
      # run the build steps for this mpy version
      - run: stubber switch ${{matrix.version}}
      - run: stubber get-frozen
      - run: stubber get-docstubs
      - run: stubber merge --version ${{matrix.version}}

      - run: |
          pip install poetry
          poetry config repositories.test-pypi https://test.pypi.org/legacy/
          poetry config --list
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.POETRY_PYPI_TOKEN_PYPI }}
          POETRY_PYPI_TOKEN_TEST_PYPI: pypi-AgENdGVzdC5weXBpLm9yZwIkM2MwZTQ3ZjctMTY4NC00MWZmLWI0NjUtMGRhNWIyMTM1MzY5AAIqWzMsIjg3YWJmYjEwLTc4YjYtNDkxZS1iODhjLTQ4MjAwNTg1MzJiYyJdAAAGICXOOKXDE1O10MaOkZhbsSZsLSGLOterMLyWnbFZT280

      - name: Commit the changes
        uses: EndBug/add-and-commit@v8
        with:
          message: publish stubs for ${{matrix.version}}
