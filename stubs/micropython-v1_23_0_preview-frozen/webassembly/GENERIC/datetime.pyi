from _typeshed import Incomplete

_DBM: Incomplete
_DIM: Incomplete
_TIME_SPEC: Incomplete

def _leap(y): ...
def _dby(y): ...
def _dim(y, m): ...
def _dbm(y, m): ...
def _ymd2o(y, m, d): ...
def _o2ymd(n): ...

MINYEAR: int
MAXYEAR: int

class timedelta:
    _us: Incomplete
    def __init__(
        self,
        days: int = ...,
        seconds: int = ...,
        microseconds: int = ...,
        milliseconds: int = ...,
        minutes: int = ...,
        hours: int = ...,
        weeks: int = ...,
    ) -> None: ...
    def __repr__(self) -> str: ...
    def total_seconds(self): ...
    @property
    def days(self): ...
    @property
    def seconds(self): ...
    @property
    def microseconds(self): ...
    def __add__(self, other): ...
    def __sub__(self, other): ...
    def __neg__(self): ...
    def __pos__(self): ...
    def __abs__(self): ...
    def __mul__(self, other): ...
    __rmul__ = __mul__
    def __truediv__(self, other): ...
    def __floordiv__(self, other): ...
    def __mod__(self, other): ...
    def __divmod__(self, other): ...
    def __eq__(self, other): ...
    def __le__(self, other): ...
    def __lt__(self, other): ...
    def __ge__(self, other): ...
    def __gt__(self, other): ...
    def __bool__(self) -> bool: ...
    def __str__(self) -> str: ...
    _hash: Incomplete
    def __hash__(self): ...
    def isoformat(self): ...
    def _format(self, spec: int = ...): ...
    def tuple(self): ...
    def _tuple(self, n): ...

class tzinfo:
    def tzname(self, dt) -> None: ...
    def utcoffset(self, dt) -> None: ...
    def dst(self, dt) -> None: ...
    def fromutc(self, dt): ...
    def isoformat(self, dt): ...

class timezone(tzinfo):
    _offset: Incomplete
    _name: Incomplete
    def __init__(self, offset, name: Incomplete | None = ...) -> None: ...
    def __repr__(self) -> str: ...
    def __eq__(self, other): ...
    def __str__(self) -> str: ...
    _hash: Incomplete
    def __hash__(self): ...
    def utcoffset(self, dt): ...
    def dst(self, dt) -> None: ...
    def tzname(self, dt): ...
    def fromutc(self, dt): ...

def _date(y, m, d): ...
def _iso2d(s): ...
def _d2iso(o): ...

class date:
    _ord: Incomplete
    def __init__(self, year, month, day) -> None: ...
    @classmethod
    def fromtimestamp(cls, ts): ...
    @classmethod
    def today(cls): ...
    @classmethod
    def fromordinal(cls, n): ...
    @classmethod
    def fromisoformat(cls, s): ...
    @property
    def year(self): ...
    @property
    def month(self): ...
    @property
    def day(self): ...
    def toordinal(self): ...
    def timetuple(self): ...
    def replace(self, year: Incomplete | None = ..., month: Incomplete | None = ..., day: Incomplete | None = ...): ...
    def __add__(self, other): ...
    def __sub__(self, other): ...
    def __eq__(self, other): ...
    def __le__(self, other): ...
    def __lt__(self, other): ...
    def __ge__(self, other): ...
    def __gt__(self, other): ...
    def weekday(self): ...
    def isoweekday(self): ...
    def isoformat(self): ...
    def __repr__(self) -> str: ...
    __str__ = isoformat
    _hash: Incomplete
    def __hash__(self): ...
    def tuple(self): ...

def _time(h, m, s, us, fold): ...
def _iso2t(s): ...
def _t2iso(td, timespec, dt, tz): ...

class time:
    _td: Incomplete
    _tz: Incomplete
    _fd: Incomplete
    def __init__(
        self,
        hour: int = ...,
        minute: int = ...,
        second: int = ...,
        microsecond: int = ...,
        tzinfo: Incomplete | None = ...,
        *,
        fold: int = ...,
    ) -> None: ...
    @classmethod
    def fromisoformat(cls, s): ...
    @property
    def hour(self): ...
    @property
    def minute(self): ...
    @property
    def second(self): ...
    @property
    def microsecond(self): ...
    @property
    def tzinfo(self): ...
    @property
    def fold(self): ...
    def replace(
        self,
        hour: Incomplete | None = ...,
        minute: Incomplete | None = ...,
        second: Incomplete | None = ...,
        microsecond: Incomplete | None = ...,
        tzinfo: bool = ...,
        *,
        fold: Incomplete | None = ...,
    ): ...
    def isoformat(self, timespec: str = ...): ...
    def __repr__(self) -> str: ...
    __str__ = isoformat
    def __bool__(self) -> bool: ...
    def __eq__(self, other): ...
    def __le__(self, other): ...
    def __lt__(self, other): ...
    def __ge__(self, other): ...
    def __gt__(self, other): ...
    def _sub(self, other): ...
    _hash: Incomplete
    def __hash__(self): ...
    def utcoffset(self): ...
    def dst(self): ...
    def tzname(self): ...
    def tuple(self): ...

class datetime:
    _d: Incomplete
    _t: Incomplete
    _tz: Incomplete
    _fd: Incomplete
    def __init__(
        self,
        year,
        month,
        day,
        hour: int = ...,
        minute: int = ...,
        second: int = ...,
        microsecond: int = ...,
        tzinfo: Incomplete | None = ...,
        *,
        fold: int = ...,
    ) -> None: ...
    @classmethod
    def fromtimestamp(cls, ts, tz: Incomplete | None = ...): ...
    @classmethod
    def now(cls, tz: Incomplete | None = ...): ...
    @classmethod
    def fromordinal(cls, n): ...
    @classmethod
    def fromisoformat(cls, s): ...
    @classmethod
    def combine(cls, date, time, tzinfo: Incomplete | None = ...): ...
    @property
    def year(self): ...
    @property
    def month(self): ...
    @property
    def day(self): ...
    @property
    def hour(self): ...
    @property
    def minute(self): ...
    @property
    def second(self): ...
    @property
    def microsecond(self): ...
    @property
    def tzinfo(self): ...
    @property
    def fold(self): ...
    def __add__(self, other): ...
    def __sub__(self, other): ...
    def _sub(self, other): ...
    def __eq__(self, other): ...
    def __le__(self, other): ...
    def __lt__(self, other): ...
    def __ge__(self, other): ...
    def __gt__(self, other): ...
    def _cmp(self, other): ...
    def date(self): ...
    def time(self): ...
    def timetz(self): ...
    def replace(
        self,
        year: Incomplete | None = ...,
        month: Incomplete | None = ...,
        day: Incomplete | None = ...,
        hour: Incomplete | None = ...,
        minute: Incomplete | None = ...,
        second: Incomplete | None = ...,
        microsecond: Incomplete | None = ...,
        tzinfo: bool = ...,
        *,
        fold: Incomplete | None = ...,
    ): ...
    def astimezone(self, tz: Incomplete | None = ...): ...
    def utcoffset(self): ...
    def dst(self): ...
    def tzname(self): ...
    def timetuple(self): ...
    def toordinal(self): ...
    def timestamp(self): ...
    def weekday(self): ...
    def isoweekday(self): ...
    def isoformat(self, sep: str = ..., timespec: str = ...): ...
    def __repr__(self) -> str: ...
    def __str__(self) -> str: ...
    _hash: Incomplete
    def __hash__(self): ...
    def tuple(self): ...
