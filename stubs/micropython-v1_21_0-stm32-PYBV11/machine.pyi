from _typeshed import Incomplete as Incomplete

HARD_RESET: int
PWRON_RESET: int
SOFT_RESET: int
DEEPSLEEP_RESET: int
WDT_RESET: int

def idle(*args, **kwargs) -> Incomplete: ...
def freq(*args, **kwargs) -> Incomplete: ...
def info(*args, **kwargs) -> Incomplete: ...
def dht_readinto(*args, **kwargs) -> Incomplete: ...
def enable_irq(*args, **kwargs) -> Incomplete: ...
def disable_irq(*args, **kwargs) -> Incomplete: ...
def deepsleep(*args, **kwargs) -> Incomplete: ...
def soft_reset(*args, **kwargs) -> Incomplete: ...
def sleep(*args, **kwargs) -> Incomplete: ...
def time_pulse_us(*args, **kwargs) -> Incomplete: ...
def lightsleep(*args, **kwargs) -> Incomplete: ...
def reset(*args, **kwargs) -> Incomplete: ...
def rng(*args, **kwargs) -> Incomplete: ...
def reset_cause(*args, **kwargs) -> Incomplete: ...
def unique_id(*args, **kwargs) -> Incomplete: ...
def bootloader(*args, **kwargs) -> Incomplete: ...
def bitstream(*args, **kwargs) -> Incomplete: ...

class Pin:
    AF_OD: int
    AF9_TIM14: int
    ALT_OPEN_DRAIN: int
    AF_PP: int
    ALT: int
    AF9_CAN1: int
    AF8_USART6: int
    AF9_TIM13: int
    AF9_CAN2: int
    AF9_TIM12: int
    PULL_UP: int
    OUT_PP: int
    OUT_OD: int
    ANALOG: int
    PULL_DOWN: int
    PULL_NONE: int
    IRQ_FALLING: int
    IN: int
    OUT: int
    IRQ_RISING: int
    OPEN_DRAIN: int
    AF2_TIM5: int
    AF3_TIM10: int
    AF3_TIM11: int
    AF3_TIM8: int
    AF3_TIM9: int
    AF2_TIM4: int
    AF1_TIM1: int
    AF1_TIM2: int
    AF2_TIM3: int
    AF8_UART4: int
    AF6_I2S2: int
    AF7_USART1: int
    AF7_USART2: int
    AF7_USART3: int
    AF4_I2C1: int
    AF5_SPI2: int
    AF4_I2C2: int
    AF5_I2S2: int
    AF5_SPI1: int
    def mode(self, *args, **kwargs) -> Incomplete: ...
    def name(self, *args, **kwargs) -> Incomplete: ...
    def pull(self, *args, **kwargs) -> Incomplete: ...
    def low(self, *args, **kwargs) -> Incomplete: ...
    def irq(self, *args, **kwargs) -> Incomplete: ...
    def pin(self, *args, **kwargs) -> Incomplete: ...
    def port(self, *args, **kwargs) -> Incomplete: ...
    def names(self, *args, **kwargs) -> Incomplete: ...
    def on(self, *args, **kwargs) -> Incomplete: ...
    def off(self, *args, **kwargs) -> Incomplete: ...
    def init(self, *args, **kwargs) -> Incomplete: ...
    def af_list(self, *args, **kwargs) -> Incomplete: ...
    def af(self, *args, **kwargs) -> Incomplete: ...
    def value(self, *args, **kwargs) -> Incomplete: ...
    def high(self, *args, **kwargs) -> Incomplete: ...
    def gpio(self, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def dict(cls, *args, **kwargs) -> Incomplete: ...
    @classmethod
    def debug(cls, *args, **kwargs) -> Incomplete: ...

    class cpu:
        B9: Incomplete
        B8: Incomplete
        B7: Incomplete
        C0: Incomplete
        C1: Incomplete
        C10: Incomplete
        B3: Incomplete
        B2: Incomplete
        B6: Incomplete
        B4: Incomplete
        B5: Incomplete
        B15: Incomplete
        C7: Incomplete
        C6: Incomplete
        C5: Incomplete
        C8: Incomplete
        C9: Incomplete
        C11: Incomplete
        C13: Incomplete
        C12: Incomplete
        C4: Incomplete
        C2: Incomplete
        C3: Incomplete
        D2: Incomplete
        A15: Incomplete
        A14: Incomplete
        A13: Incomplete
        A2: Incomplete
        A3: Incomplete
        A4: Incomplete
        A1: Incomplete
        A0: Incomplete
        A12: Incomplete
        A10: Incomplete
        A11: Incomplete
        B14: Incomplete
        B11: Incomplete
        B10: Incomplete
        B1: Incomplete
        B12: Incomplete
        B13: Incomplete
        A5: Incomplete
        A7: Incomplete
        A6: Incomplete
        B0: Incomplete
        A8: Incomplete
        A9: Incomplete
        def __init__(self, *argv, **kwargs) -> None: ...

    @classmethod
    def mapper(cls, *args, **kwargs) -> Incomplete: ...

    class board:
        X5: Incomplete
        X18: Incomplete
        X4: Incomplete
        X8: Incomplete
        X6: Incomplete
        X7: Incomplete
        X2: Incomplete
        X3: Incomplete
        X19: Incomplete
        X22: Incomplete
        X20: Incomplete
        X21: Incomplete
        Y5: Incomplete
        X9: Incomplete
        Y4: Incomplete
        Y8: Incomplete
        Y6: Incomplete
        Y7: Incomplete
        Y10: Incomplete
        Y3: Incomplete
        Y1: Incomplete
        Y2: Incomplete
        Y11: Incomplete
        Y12: Incomplete
        Y9: Incomplete
        SD_CK: Incomplete
        X17: Incomplete
        SD: Incomplete
        SD_D1: Incomplete
        SD_CMD: Incomplete
        SD_D0: Incomplete
        LED_GREEN: Incomplete
        MMA_INT: Incomplete
        LED_BLUE: Incomplete
        MMA_AVDD: Incomplete
        LED_RED: Incomplete
        LED_YELLOW: Incomplete
        X1: Incomplete
        SD_D2: Incomplete
        USB_VBUS: Incomplete
        X12: Incomplete
        X10: Incomplete
        X11: Incomplete
        SD_SW: Incomplete
        USB_ID: Incomplete
        SD_D3: Incomplete
        USB_DP: Incomplete
        SW: Incomplete
        USB_DM: Incomplete
        def __init__(self, *argv, **kwargs) -> None: ...

    def __init__(self, *argv, **kwargs) -> None: ...

class I2S:
    RX: int
    MONO: int
    STEREO: int
    TX: int
    def shift(self, *args, **kwargs) -> Incomplete: ...
    def init(self, *args, **kwargs) -> Incomplete: ...
    def irq(self, *args, **kwargs) -> Incomplete: ...
    def readinto(self, *args, **kwargs) -> Incomplete: ...
    def deinit(self, *args, **kwargs) -> Incomplete: ...
    def write(self, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class SPI:
    LSB: int
    MSB: int
    def deinit(self, *args, **kwargs) -> Incomplete: ...
    def init(self, *args, **kwargs) -> Incomplete: ...
    def write_readinto(self, *args, **kwargs) -> Incomplete: ...
    def read(self, *args, **kwargs) -> Incomplete: ...
    def write(self, *args, **kwargs) -> Incomplete: ...
    def readinto(self, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

mem8: Incomplete

class RTC:
    def info(self, *args, **kwargs) -> Incomplete: ...
    def init(self, *args, **kwargs) -> Incomplete: ...
    def wakeup(self, *args, **kwargs) -> Incomplete: ...
    def datetime(self, *args, **kwargs) -> Incomplete: ...
    def calibration(self, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class I2C:
    def readfrom_mem_into(self, *args, **kwargs) -> Incomplete: ...
    def readfrom_into(self, *args, **kwargs) -> Incomplete: ...
    def readfrom_mem(self, *args, **kwargs) -> Incomplete: ...
    def writeto_mem(self, *args, **kwargs) -> Incomplete: ...
    def scan(self, *args, **kwargs) -> Incomplete: ...
    def writeto(self, *args, **kwargs) -> Incomplete: ...
    def writevto(self, *args, **kwargs) -> Incomplete: ...
    def start(self, *args, **kwargs) -> Incomplete: ...
    def readfrom(self, *args, **kwargs) -> Incomplete: ...
    def readinto(self, *args, **kwargs) -> Incomplete: ...
    def init(self, *args, **kwargs) -> Incomplete: ...
    def stop(self, *args, **kwargs) -> Incomplete: ...
    def write(self, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class ADC:
    VREF: int
    CORE_VREF: int
    CORE_VBAT: int
    CORE_TEMP: int
    def read_u16(self, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class WDT:
    def feed(self, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class Timer:
    PERIODIC: int
    ONE_SHOT: int
    def init(self, *args, **kwargs) -> Incomplete: ...
    def deinit(self, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class SoftSPI:
    LSB: int
    MSB: int
    def deinit(self, *args, **kwargs) -> Incomplete: ...
    def init(self, *args, **kwargs) -> Incomplete: ...
    def write_readinto(self, *args, **kwargs) -> Incomplete: ...
    def read(self, *args, **kwargs) -> Incomplete: ...
    def write(self, *args, **kwargs) -> Incomplete: ...
    def readinto(self, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class UART:
    IRQ_RXIDLE: int
    CTS: int
    RTS: int
    def init(self, *args, **kwargs) -> Incomplete: ...
    def flush(self, *args, **kwargs) -> Incomplete: ...
    def irq(self, *args, **kwargs) -> Incomplete: ...
    def txdone(self, *args, **kwargs) -> Incomplete: ...
    def sendbreak(self, *args, **kwargs) -> Incomplete: ...
    def readchar(self, *args, **kwargs) -> Incomplete: ...
    def writechar(self, *args, **kwargs) -> Incomplete: ...
    def read(self, *args, **kwargs) -> Incomplete: ...
    def deinit(self, *args, **kwargs) -> Incomplete: ...
    def any(self, *args, **kwargs) -> Incomplete: ...
    def write(self, *args, **kwargs) -> Incomplete: ...
    def readinto(self, *args, **kwargs) -> Incomplete: ...
    def readline(self, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

mem32: Incomplete
mem16: Incomplete

class SoftI2C:
    def readfrom_mem_into(self, *args, **kwargs) -> Incomplete: ...
    def readfrom_into(self, *args, **kwargs) -> Incomplete: ...
    def readfrom_mem(self, *args, **kwargs) -> Incomplete: ...
    def writeto_mem(self, *args, **kwargs) -> Incomplete: ...
    def scan(self, *args, **kwargs) -> Incomplete: ...
    def writeto(self, *args, **kwargs) -> Incomplete: ...
    def writevto(self, *args, **kwargs) -> Incomplete: ...
    def start(self, *args, **kwargs) -> Incomplete: ...
    def readfrom(self, *args, **kwargs) -> Incomplete: ...
    def readinto(self, *args, **kwargs) -> Incomplete: ...
    def init(self, *args, **kwargs) -> Incomplete: ...
    def stop(self, *args, **kwargs) -> Incomplete: ...
    def write(self, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class Signal:
    def off(self, *args, **kwargs) -> Incomplete: ...
    def on(self, *args, **kwargs) -> Incomplete: ...
    def value(self, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...
