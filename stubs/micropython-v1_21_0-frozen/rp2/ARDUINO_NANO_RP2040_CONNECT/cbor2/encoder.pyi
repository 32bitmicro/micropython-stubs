from _typeshed import Incomplete

class CBOREncodeError(Exception): ...

def encode_length(major_tag, length): ...
def encode_semantic(encoder, tag, value) -> None: ...
def encode_float(encoder, value) -> None: ...
def encode_int(encoder, value) -> None: ...
def encode_bytestring(encoder, value) -> None: ...
def encode_bytearray(encoder, value) -> None: ...
def encode_string(encoder, value) -> None: ...
def encode_map(encoder, value) -> None: ...
def encode_array(encoder, value) -> None: ...
def encode_boolean(encoder, value) -> None: ...
def encode_none(encoder, value) -> None: ...

cbor_encoders: Incomplete

class CBOREncoder:
    fp: Incomplete
    def __init__(self, fp) -> None: ...
    def _find_encoder(self, obj): ...
    def write(self, data) -> None: ...
    def encode(self, obj) -> None: ...

def dumps(obj, **kwargs): ...
def dump(obj, fp, **kwargs) -> None: ...
