from typing import Any

PWRON_RESET: int
HARD_RESET: int
SOFT_RESET: int
WDT_RESET: int
DEEPSLEEP_RESET: int

def disable_irq(*args, **kwargs) -> Any: ...
def reset_cause(*args, **kwargs) -> Any: ...
def enable_irq(*args, **kwargs) -> Any: ...
def bitstream(*args, **kwargs) -> Any: ...
def dht_readinto(*args, **kwargs) -> Any: ...
def bootloader(*args, **kwargs) -> Any: ...
def soft_reset(*args, **kwargs) -> Any: ...
def freq(*args, **kwargs) -> Any: ...
def reset(*args, **kwargs) -> Any: ...
def time_pulse_us(*args, **kwargs) -> Any: ...
def lightsleep(*args, **kwargs) -> Any: ...
def idle(*args, **kwargs) -> Any: ...
def unique_id(*args, **kwargs) -> Any: ...

class WDT:
    def timeout_ms(self, *args, **kwargs) -> Any: ...
    def feed(self, *args, **kwargs) -> Any: ...
    def __init__(self, *argv, **kwargs) -> None: ...

mem8: Any
mem32: Any
mem16: Any

class PWM:
    def freq(self, *args, **kwargs) -> Any: ...
    def duty_u16(self, *args, **kwargs) -> Any: ...
    def duty_ns(self, *args, **kwargs) -> Any: ...
    def deinit(self, *args, **kwargs) -> Any: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class ADC:
    def read_u16(self, *args, **kwargs) -> Any: ...
    def deinit(self, *args, **kwargs) -> Any: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class DAC:
    def write(self, *args, **kwargs) -> Any: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class I2C:
    def readfrom_mem_into(self, *args, **kwargs) -> Any: ...
    def readfrom_into(self, *args, **kwargs) -> Any: ...
    def readfrom_mem(self, *args, **kwargs) -> Any: ...
    def writeto_mem(self, *args, **kwargs) -> Any: ...
    def scan(self, *args, **kwargs) -> Any: ...
    def writeto(self, *args, **kwargs) -> Any: ...
    def writevto(self, *args, **kwargs) -> Any: ...
    def start(self, *args, **kwargs) -> Any: ...
    def readfrom(self, *args, **kwargs) -> Any: ...
    def readinto(self, *args, **kwargs) -> Any: ...
    def init(self, *args, **kwargs) -> Any: ...
    def stop(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class Pin:
    OUT: int
    OPEN_DRAIN: int
    LOW_POWER: int
    PULL_DOWN: int
    PULL_OFF: int
    PULL_UP: int
    IRQ_RISING: int
    HIGH_POWER: int
    IN: int
    IRQ_FALLING: int
    def irq(self, *args, **kwargs) -> Any: ...
    def toggle(self, *args, **kwargs) -> Any: ...
    def init(self, *args, **kwargs) -> Any: ...
    def on(self, *args, **kwargs) -> Any: ...
    def low(self, *args, **kwargs) -> Any: ...
    def off(self, *args, **kwargs) -> Any: ...
    def high(self, *args, **kwargs) -> Any: ...
    def value(self, *args, **kwargs) -> Any: ...
    def disable(self, *args, **kwargs) -> Any: ...
    def drive(self, *args, **kwargs) -> Any: ...

    class board:
        MOSI: Any
        FLASH_SCK: Any
        FLASH_WP: Any
        MISO: Any
        FLASH_MOSI: Any
        FLASH_CS: Any
        FLASH_HOLD: Any
        FLASH_MISO: Any
        VDIV: Any
        NEOPIXEL: Any
        SWDIO: Any
        USB_DM: Any
        USB_DP: Any
        SWCLK: Any
        SCK: Any
        SCL: Any
        SDA: Any
        D0: Any
        A4: Any
        A5: Any
        AREF: Any
        A3: Any
        A0: Any
        A1: Any
        A2: Any
        D9: Any
        D1: Any
        D4: Any
        D5: Any
        D6: Any
        D13: Any
        D10: Any
        D11: Any
        D12: Any
        def __init__(self, *argv, **kwargs) -> None: ...

    class cpu:
        PB04: Any
        PB08: Any
        PB03: Any
        PB07: Any
        PB05: Any
        PB06: Any
        PA30: Any
        PB02: Any
        PA27: Any
        PB01: Any
        PA31: Any
        PB00: Any
        PA25: Any
        PB17: Any
        PB09: Any
        PB16: Any
        PB30: Any
        PB22: Any
        PB23: Any
        PB11: Any
        PB15: Any
        PB10: Any
        PB14: Any
        PB12: Any
        PB13: Any
        PB31: Any
        PA07: Any
        PA11: Any
        PA06: Any
        PA10: Any
        PA08: Any
        PA09: Any
        PA01: Any
        PA05: Any
        PA00: Any
        PA04: Any
        PA02: Any
        PA03: Any
        PA24: Any
        PA20: Any
        PA12: Any
        PA19: Any
        PA23: Any
        PA21: Any
        PA22: Any
        PA14: Any
        PA18: Any
        PA13: Any
        PA17: Any
        PA15: Any
        PA16: Any
        def __init__(self, *argv, **kwargs) -> None: ...

    def __init__(self, *argv, **kwargs) -> None: ...

class SoftSPI:
    LSB: int
    MSB: int
    def deinit(self, *args, **kwargs) -> Any: ...
    def init(self, *args, **kwargs) -> Any: ...
    def write_readinto(self, *args, **kwargs) -> Any: ...
    def read(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...
    def readinto(self, *args, **kwargs) -> Any: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class Timer:
    PERIODIC: int
    ONE_SHOT: int
    def init(self, *args, **kwargs) -> Any: ...
    def deinit(self, *args, **kwargs) -> Any: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class UART:
    def flush(self, *args, **kwargs) -> Any: ...
    def deinit(self, *args, **kwargs) -> Any: ...
    def txdone(self, *args, **kwargs) -> Any: ...
    def init(self, *args, **kwargs) -> Any: ...
    def sendbreak(self, *args, **kwargs) -> Any: ...
    def read(self, *args, **kwargs) -> Any: ...
    def any(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...
    def readinto(self, *args, **kwargs) -> Any: ...
    def readline(self, *args, **kwargs) -> Any: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class SoftI2C:
    def readfrom_mem_into(self, *args, **kwargs) -> Any: ...
    def readfrom_into(self, *args, **kwargs) -> Any: ...
    def readfrom_mem(self, *args, **kwargs) -> Any: ...
    def writeto_mem(self, *args, **kwargs) -> Any: ...
    def scan(self, *args, **kwargs) -> Any: ...
    def writeto(self, *args, **kwargs) -> Any: ...
    def writevto(self, *args, **kwargs) -> Any: ...
    def start(self, *args, **kwargs) -> Any: ...
    def readfrom(self, *args, **kwargs) -> Any: ...
    def readinto(self, *args, **kwargs) -> Any: ...
    def init(self, *args, **kwargs) -> Any: ...
    def stop(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class RTC:
    def datetime(self, *args, **kwargs) -> Any: ...
    def init(self, *args, **kwargs) -> Any: ...
    def calibration(self, *args, **kwargs) -> Any: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class SPI:
    LSB: int
    MSB: int
    def deinit(self, *args, **kwargs) -> Any: ...
    def init(self, *args, **kwargs) -> Any: ...
    def write_readinto(self, *args, **kwargs) -> Any: ...
    def read(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...
    def readinto(self, *args, **kwargs) -> Any: ...
    def __init__(self, *argv, **kwargs) -> None: ...

class Signal:
    def off(self, *args, **kwargs) -> Any: ...
    def on(self, *args, **kwargs) -> Any: ...
    def value(self, *args, **kwargs) -> Any: ...
    def __init__(self, *argv, **kwargs) -> None: ...
